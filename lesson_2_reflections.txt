What happens when you initialize a repository? Why do you need to do it? git init
Git is ready for you to make commits. To be able to make commits and have a repository

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging are is where files are places waiting to be committed. Working directiry is the directory that you are curently in. The repository is the place that hold committed files. It makes total sense to be able to collect files in one placed then send them to the repository as needed. Similar to mailing a package. Sending one thing at a time is tedious and you might forget something. But bundling it all together in one package and sending it all together is much more logical.

How can you use the staging area to make sure you have one commit per logical change?
you can make comparisons between the latest commit and the staged one.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you are making changes to a functioning project that you my or may not want to keep. As well as changes that are more complex and require more commits.


How do the diagrams help you visualize the branch structure?
Make the relationships between branches/commits visual. So m\uch easier. Relatable.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
reult makes 2 things combine into one. They are represented in that way because?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merging is nice because it can point out conflicts (that would possibly make the code break) before completing the merge. Manual merges can be more tedious and are harder to work on as groups.
